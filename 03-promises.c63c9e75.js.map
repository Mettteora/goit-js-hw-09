{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,SAKzB,SAAqBC,GACnBC,EAAKD,EAAME,OAAOC,MAAQC,OAAOJ,EAAME,OAAOG,M,IALhDT,EAAQG,iBAAiB,UAQzB,SAAsBC,GACpBA,EAAMM,iBAEN,IAAQC,EAAwBN,EAAxBO,MAAOC,EAAiBR,EAAjBQ,KAAMC,EAAWT,EAAXS,OAErB,GAAIH,GAAS,GAAKE,GAAQ,GAAKC,GAAU,EAMvC,YALAC,EAAAjB,GAASkB,OAAOC,QACd,UACA,sCACA,WAKJ,IAAK,IAAIC,EAAW,EAAGA,EAAWJ,EAAQI,GAAY,EACpDC,EAAcD,EAAW,EAAGP,EAAQE,EAAOK,GACxCE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MACjBG,EAAAjB,GAASyB,OAAOC,QACd,uBAAwCC,OAAfH,EAAS,QAAYG,OAANb,EAAM,M,IAGjDc,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MAClBG,EAAAjB,GAASyB,OAAOI,QACd,sBAAqCF,OAAfH,EAAS,QAAYG,OAANb,EAAM,M,OA7BrD,IAAMP,EAAO,GAmCb,SAASc,EAAcG,EAAUV,GAC/B,OAAO,IAAIgB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEP,WAAUV,UAEpBkB,EAAO,CAAER,WAAUV,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('input', onFormInput);\nformRef.addEventListener('submit', onFormSubmit);\n\nconst form = {};\n\nfunction onFormInput(event) {\n  form[event.target.name] = Number(event.target.value);\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = form;\n\n  if (delay <= 0 || step <= 0 || amount <= 0) {\n    Notiflix.Report.warning(\n      'Oops...',\n      'Typed number must be greater than 0',\n      'Got it!'\n    );\n    return;\n  }\n\n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position + 1, delay + step * position)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","event","$ce04d3a99e08e73b$var$form","target","name","Number","value","preventDefault","delay1","delay","step","amount","$parcel$interopDefault","Report","warning","position1","$ce04d3a99e08e73b$var$createPromise","then","param","position","Notify","success","concat","catch","failure","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.c63c9e75.js.map"}